openapi: 3.0.2
info:
  title: Movies-API
  version: 1.0.0
  description: >-
    ### This is a Swagger UI for our Movies API  


    ### Error handling

    Errors are presented using the HTTP status codes 400-599. The response include a more detailed
    explanation about the error in the body.


    ```

    {
      "error": "Cleartext explanation of the error that occurred"
    }

    ```


    ### Generic API errors

    These error responses can be returned by any of the described endpoints.


    | HTTP status  |  Description |

    |---|---|

    | 400| Bad input parameters or invalid request. More information can be found in the response body.

    | 401| The consumer does not have access to the requested resource or the provided token is not valid.

    | 404| The requested resource can not be found or the user does not have access to the resource.

    | 5XX| A server error has occurred while processing the request.
paths:
  /movies:
    get:
      tags:
        - movies
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List of movies:
                  value:
                    - I Am Legend
                    - El Camino
          description: Returns a list of movies
      summary: Get a list of all movies.
      description: Returns a list of all movies in API.
    post:
      requestBody:
        description: A new movie to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error"
            examples:
              Creating new movie:
                value:
                  error: Couldn't add a new movie
        required: true
      tags:
        - new-movie
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/new-movie"
          description: New movie has been added
        "400":
          description: One or all params are missing
      summary: Creates a movie
      description: Creates a new movie
  "/movies/:id":
    get:
      tags:
        - details
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                Full details of a given movie:
                  value: "{\r\nid: 1,\r\nname: \"El Camino: Breaking Bad\",\r\ndescription: \"The action of the criminal drama film 'El Camino: Breaking Bad' takes place immediately after the events of shown in the series finale. At the center of the story is Jesse Pinkman, who finds himself in a difficult situation. Despite the fact that criminal activity is already behind him, the past continues to haunt Jesse.\"\r\n}"
          description: Returns full details of a given id movie
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Movie /w+ was not found:
                  value:
                    error: Movie \w+ was not found in movies array.
          description: Movie was not found in movies array
      operationId: id
      summary: Get full details of a movie
      description: Returns full details of a given id movie
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delete-movie"
      tags:
        - delete-movie
      responses:
        "204":
          description: Deletes everything about a movie from database
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                Delete was unsuccessful:
                  value:
                    error: Movie you are trying to delete doesn't exist.
          description: The movie isn't in the database therefore cannot be deleted
      summary: Delete selected movie
      description: Deletes a movie chosen by id by user
components:
  schemas:
    error:
      title: Root Type for error
      description: ""
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    new-movie:
      title: Root Type for new-movie
      description: ""
      required:
        - description
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      example:
        name: Shrek
        description: >-
          Shrek is a gigantic, green-skinned, physically intimidating ogre with a Scottish accent.
          In Shrek Forever After, however, it is revealed that he is much smaller than the average
          ogre.
    delete-movie:
      description: ""
      required:
        - id
      type: object
      properties:
        id:
          description: ""
          type: string
      example:
        id: 1
